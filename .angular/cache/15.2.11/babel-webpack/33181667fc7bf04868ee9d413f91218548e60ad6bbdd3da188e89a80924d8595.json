{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { FormGroup, Validators } from '@angular/forms';\nlet DashboardComponent = class DashboardComponent {\n  constructor(carService, httpClient, fb) {\n    this.carService = carService;\n    this.httpClient = httpClient;\n    this.fb = fb;\n    this.formG = new FormGroup({});\n    this.url = `${environment.api}/carros`;\n    this.carros$ = [];\n    this.carro = {\n      id: 0,\n      nome: '',\n      marca: '',\n      modelo: '',\n      preco: 0,\n      imagem: '',\n      d_alt: ''\n    };\n  }\n  ngOnInit() {\n    this.carService.obterCarros().subscribe(carros => {\n      this.carros$ = carros;\n    });\n    this.formG = this.fb.group({\n      nome: ['', Validators.required],\n      marca: ['', Validators.required],\n      modelo: ['', Validators.required],\n      preco: ['', Validators.required],\n      d_alt: ['', Validators.required]\n    });\n  }\n  cadastrarCarro(car) {\n    return this.httpClient.post(this.url, car);\n  }\n  deletarCarro(id) {\n    this.carService.deletarCarro(id).subscribe(_ => this.obterCarros());\n    //console.log('Carro deletado com sucesso!');\n    window.location.reload();\n  }\n  atualizarCarro(car) {\n    return this.httpClient.put(`${this.url}/${car.id}`, car);\n  }\n  obterCarros() {\n    return this.httpClient.get(this.url);\n  }\n  buttonClick() {\n    if (!this.carro.nome || !this.carro.marca || !this.carro.modelo || !this.carro.preco || !this.carro.d_alt) {\n      console.log('Preencha todos os campos!');\n      return;\n    }\n    if (this.carro.id) {\n      this.atualizarId();\n      this.limparFormulario();\n      return;\n    }\n    this.incrementarId();\n    this.carService.cadastrarCarro(this.carro).subscribe(_ => this.obterCarros());\n    window.location.reload();\n  }\n  atualizarId() {\n    this.carService.atualizarCarro(this.carro).subscribe(_ => this.obterCarros());\n  }\n  preencherFormulario(car) {\n    this.carro = car;\n  }\n  limparFormulario() {\n    this.carro = {\n      id: 0,\n      nome: '',\n      marca: '',\n      modelo: '',\n      preco: 0,\n      imagem: '',\n      d_alt: ''\n    };\n  }\n  incrementarId() {\n    this.carro.id = this.carros$.length + 1;\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":"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","names":["Component","environment","FormGroup","Validators","DashboardComponent","constructor","carService","httpClient","fb","api","id","nome","marca","modelo","preco","imagem","d_alt","ngOnInit","obterCarros","subscribe","carros","carros$","formG","group","required","cadastrarCarro","car","post","url","deletarCarro","_","window","location","reload","atualizarCarro","put","get","buttonClick","carro","console","log","atualizarId","limparFormulario","incrementarId","preencherFormulario","length","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Jaqueline\\Desktop\\CS CARMOTORS\\cscar\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { CarService } from 'src/app/services/car.service';\nimport { environment } from 'src/environments/environment';\nimport { Car, CarCadastro } from 'src/app/models/car.model';\nimport { Form, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent {\n  formG: FormGroup = new FormGroup({});\n\n  url = `${environment.api}/carros`;\n  carros$: any[] = [];\n\n\n  carro: Car = {\n    id: 0,\n    nome: '',\n    marca: '',\n    modelo: '',\n    preco: 0,\n    imagem: '',\n    d_alt: ''\n  };\n\n  constructor(\n    private carService: CarService,\n    private httpClient: HttpClient,\n    private fb: FormBuilder\n    ) { }\n\n  ngOnInit(): void {\n    this.carService.obterCarros().subscribe((carros) => {\n      this.carros$ = carros;\n    });\n\n    this.formG = this.fb.group({\n      nome: ['', Validators.required],\n      marca: ['', Validators.required],\n      modelo: ['', Validators.required],\n      preco: ['', Validators.required],\n      d_alt: ['', Validators.required]\n    });\n  }\n\n  cadastrarCarro(car: CarCadastro) {\n    return this.httpClient.post<Car>(this.url, car);\n  }\n\n  deletarCarro(id: number) {\n    this.carService.deletarCarro(id).subscribe(_ => this.obterCarros());\n    //console.log('Carro deletado com sucesso!');\n    window.location.reload();\n\n  }\n\n  atualizarCarro(car: Car) {\n    return this.httpClient.put<Car>(`${this.url}/${car.id}`, car);\n  }\n\n  obterCarros() {\n    return this.httpClient.get<Car[]>(this.url);\n  }\n\n  buttonClick(){\n    if (!this.carro.nome || !this.carro.marca || !this.carro.modelo ||\n        !this.carro.    preco || !this.carro.d_alt) {\n      console.log('Preencha todos os campos!');\n      return;\n    }\n\n    if (this.carro.id) {\n      this.atualizarId();\n      this.limparFormulario();\n      return;\n    }\n\n    this.incrementarId();\n\n    this.carService.cadastrarCarro(this.carro).subscribe(_ => this.obterCarros());\n    window.location.reload();\n  }\n\n  atualizarId(){\n    this.carService.atualizarCarro(this.carro).subscribe(_ => this.obterCarros());\n  }\n\n  preencherFormulario(car: Car) {\n    this.carro = car;\n  }\n\n  limparFormulario() {\n    this.carro = {\n      id: 0,\n      nome: '',\n      marca: '',\n      modelo: '',\n      preco: 0,\n      imagem: '',\n      d_alt: ''\n    };\n  }\n\n  incrementarId() {\n    this.carro.id = this.carros$.length + 1;\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}