{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nlet DashboardComponent = class DashboardComponent {\n  constructor(carService, httpClient) {\n    this.carService = carService;\n    this.httpClient = httpClient;\n    this.carros$ = [];\n    this.url = `${environment.api}/carros`;\n    this.carro = {\n      id: 0,\n      nome: '',\n      marca: '',\n      modelo: '',\n      preco: 0,\n      imagem: '',\n      d_alt: ''\n    };\n  }\n  ngOnInit() {\n    this.carService.obterCarros().subscribe(carros => {\n      this.carros$ = carros;\n    });\n  }\n  cadastrarCarro(car) {\n    return this.httpClient.post(this.url, car);\n  }\n  deletarCarro(id) {\n    return this.httpClient.delete(`${this.url}/${id}`);\n  }\n  atualizarCarro(car) {\n    return this.httpClient.put(`${this.url}/${car.id}`, car);\n  }\n  obterCarro(id) {\n    return this.httpClient.get(`${this.url}/${id}`);\n  }\n  obterCarros() {\n    return this.httpClient.get(this.url);\n  }\n  salvarCarro() {\n    if (this.carro.id) {}\n    this.carService.cadastrarCarro(this.carro).subscribe(_ => this.obterCarros());\n  }\n  atualizarId() {\n    this.carService.atualizarCarro(this.carro).subscribe(_ => this.obterCarros());\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,WAAW,QAAQ,8BAA8B;AAQnD,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAgB7BC,YACUC,UAAsB,EACtBC,UAAsB;IADtB,eAAU,GAAVD,UAAU;IACV,eAAU,GAAVC,UAAU;IAhBpB,YAAO,GAAU,EAAE;IAEnB,QAAG,GAAG,GAAGJ,WAAW,CAACK,GAAG,SAAS;IAEjC,UAAK,GAAQ;MACXC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE;KACR;EAKK;EAENC,QAAQ;IACN,IAAI,CAACV,UAAU,CAACW,WAAW,EAAE,CAACC,SAAS,CAAEC,MAAM,IAAI;MACjD,IAAI,CAACC,OAAO,GAAGD,MAAM;IACvB,CAAC,CAAC;EAEJ;EAEAE,cAAc,CAACC,GAAgB;IAC7B,OAAO,IAAI,CAACf,UAAU,CAACgB,IAAI,CAAM,IAAI,CAACC,GAAG,EAAEF,GAAG,CAAC;EACjD;EAEAG,YAAY,CAAChB,EAAU;IACrB,OAAO,IAAI,CAACF,UAAU,CAACmB,MAAM,CAAM,GAAG,IAAI,CAACF,GAAG,IAAIf,EAAE,EAAE,CAAC;EACzD;EAEAkB,cAAc,CAACL,GAAQ;IACrB,OAAO,IAAI,CAACf,UAAU,CAACqB,GAAG,CAAM,GAAG,IAAI,CAACJ,GAAG,IAAIF,GAAG,CAACb,EAAE,EAAE,EAAEa,GAAG,CAAC;EAC/D;EAEAO,UAAU,CAACpB,EAAU;IACnB,OAAO,IAAI,CAACF,UAAU,CAACuB,GAAG,CAAM,GAAG,IAAI,CAACN,GAAG,IAAIf,EAAE,EAAE,CAAC;EACtD;EAEAQ,WAAW;IACT,OAAO,IAAI,CAACV,UAAU,CAACuB,GAAG,CAAQ,IAAI,CAACN,GAAG,CAAC;EAC7C;EAEAO,WAAW;IACT,IAAI,IAAI,CAACC,KAAK,CAACvB,EAAE,EAAE;IAGnB,IAAI,CAACH,UAAU,CAACe,cAAc,CAAC,IAAI,CAACW,KAAK,CAAC,CAACd,SAAS,CAACe,CAAC,IAAI,IAAI,CAAChB,WAAW,EAAE,CAAC;EAC/E;EAEAiB,WAAW;IACT,IAAI,CAAC5B,UAAU,CAACqB,cAAc,CAAC,IAAI,CAACK,KAAK,CAAC,CAACd,SAAS,CAACe,CAAC,IAAI,IAAI,CAAChB,WAAW,EAAE,CAAC;EAC/E;CAED;AA3DYb,kBAAkB,eAL9BF,SAAS,CAAC;EACTiC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,GACWjC,kBAAkB,CA2D9B;SA3DYA,kBAAkB","names":["Component","environment","DashboardComponent","constructor","carService","httpClient","api","id","nome","marca","modelo","preco","imagem","d_alt","ngOnInit","obterCarros","subscribe","carros","carros$","cadastrarCarro","car","post","url","deletarCarro","delete","atualizarCarro","put","obterCarro","get","salvarCarro","carro","_","atualizarId","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Jaqueline\\Desktop\\CS CARMOTORS\\cscar\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { CarService } from 'src/app/services/car.service';\nimport { environment } from 'src/environments/environment';\nimport { Car, CarCadastro } from 'src/app/models/car.model';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent {\n\n  carros$: any[] = [];\n\n  url = `${environment.api}/carros`;\n\n  carro: Car = {\n    id: 0,\n    nome: '',\n    marca: '',\n    modelo: '',\n    preco: 0,\n    imagem: '',\n    d_alt: ''\n  };\n\n  constructor(\n    private carService: CarService,\n    private httpClient: HttpClient\n    ) { }\n\n  ngOnInit(): void {\n    this.carService.obterCarros().subscribe((carros) => {\n      this.carros$ = carros;\n    });\n\n  }\n\n  cadastrarCarro(car: CarCadastro) {\n    return this.httpClient.post<Car>(this.url, car);\n  }\n\n  deletarCarro(id: number) {\n    return this.httpClient.delete<Car>(`${this.url}/${id}`);\n  }\n\n  atualizarCarro(car: Car) {\n    return this.httpClient.put<Car>(`${this.url}/${car.id}`, car);\n  }\n\n  obterCarro(id: number) {\n    return this.httpClient.get<Car>(`${this.url}/${id}`);\n  }\n\n  obterCarros() {\n    return this.httpClient.get<Car[]>(this.url);\n  }\n\n  salvarCarro(){\n    if (this.carro.id) {\n      \n    }\n    this.carService.cadastrarCarro(this.carro).subscribe(_ => this.obterCarros());\n  }\n\n  atualizarId(){\n    this.carService.atualizarCarro(this.carro).subscribe(_ => this.obterCarros());\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}