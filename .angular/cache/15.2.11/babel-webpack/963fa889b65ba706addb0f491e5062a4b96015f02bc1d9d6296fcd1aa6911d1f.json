{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class OrderPipeId {\n  transform(array, field) {\n    if (!Array.isArray(array)) {\n      return [];\n    }\n    array.sort((a, b) => {\n      const valueA = typeof a[field] === 'number' ? a[field] : parseInt(a[field]);\n      const valueB = typeof b[field] === 'number' ? b[field] : parseInt(b[field]);\n      if (valueA < valueB) {\n        return -1;\n      } else if (valueA > valueB) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    return array;\n  }\n  static #_ = this.ɵfac = function OrderPipeId_Factory(t) {\n    return new (t || OrderPipeId)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"orderId\",\n    type: OrderPipeId,\n    pure: true\n  });\n}\nexport class OrderPipePreco {\n  transform(array, field) {\n    if (!Array.isArray(array)) {\n      return [];\n    }\n    array.sort((a, b) => {\n      if (a[field] < b[field]) {\n        return -1;\n      } else if (a[field] > b[field]) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    return array;\n  }\n  static #_ = this.ɵfac = function OrderPipePreco_Factory(t) {\n    return new (t || OrderPipePreco)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"orderPreco\",\n    type: OrderPipePreco,\n    pure: true\n  });\n}","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,WAAW;EAEtBC,SAAS,CAACC,KAAU,EAAEC,KAAa;IACjC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAE;MACzB,OAAO,EAAE;;IAEXA,KAAK,CAACI,IAAI,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAI;MAC5B,MAAMC,MAAM,GAAG,OAAOF,CAAC,CAACJ,KAAK,CAAC,KAAK,QAAQ,GAAGI,CAAC,CAACJ,KAAK,CAAC,GAAGO,QAAQ,CAAEH,CAAC,CAACJ,KAAK,CAAC,CAAC;MAC5E,MAAMQ,MAAM,GAAG,OAAOH,CAAC,CAACL,KAAK,CAAC,KAAK,QAAQ,GAAGK,CAAC,CAACL,KAAK,CAAC,GAAGO,QAAQ,CAAEF,CAAC,CAACL,KAAK,CAAC,CAAC;MAC5E,IAAIM,MAAM,GAAGE,MAAM,EAAE;QACnB,OAAO,CAAC,CAAC;OACV,MAAM,IAAIF,MAAM,GAAGE,MAAM,EAAE;QAC1B,OAAO,CAAC;OACT,MAAM;QACL,OAAO,CAAC;;IAEZ,CAAC,CAAC;IACF,OAAOT,KAAK;EACd;EAAC;qBAlBUF,WAAW;EAAA;EAAA;;UAAXA,WAAW;IAAAY;EAAA;;AAwBxB,OAAM,MAAOC,cAAc;EAEzBZ,SAAS,CAACC,KAAU,EAAEC,KAAa;IACjC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAE;MACzB,OAAO,EAAE;;IAEXA,KAAK,CAACI,IAAI,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAI;MAC5B,IAAID,CAAC,CAACJ,KAAK,CAAC,GAAGK,CAAC,CAACL,KAAK,CAAC,EAAE;QACvB,OAAO,CAAC,CAAC;OACV,MAAM,IAAII,CAAC,CAACJ,KAAK,CAAC,GAAGK,CAAC,CAACL,KAAK,CAAC,EAAE;QAC9B,OAAO,CAAC;OACT,MAAM;QACL,OAAO,CAAC;;IAEZ,CAAC,CAAC;IACF,OAAOD,KAAK;EAEd;EAAC;qBAjBUW,cAAc;EAAA;EAAA;;UAAdA,cAAc;IAAAD;EAAA","names":["OrderPipeId","transform","array","field","Array","isArray","sort","a","b","valueA","parseInt","valueB","pure","OrderPipePreco"],"sourceRoot":"","sources":["C:\\Users\\Jaqueline\\Desktop\\CS CARMOTORS\\cscar\\src\\app\\pipe\\order.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'orderId'\n})\nexport class OrderPipeId implements PipeTransform {\n\n  transform(array: any, field: string): any[] {\n    if (!Array.isArray(array)) {\n      return [];\n    }\n    array.sort((a: any, b: any) => {\n      const valueA = typeof a[field] === 'number' ? a[field] : parseInt (a[field]);\n      const valueB = typeof b[field] === 'number' ? b[field] : parseInt (b[field]);\n      if (valueA < valueB) {\n        return -1;\n      } else if (valueA > valueB) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    return array;\n  }\n}\n\n@Pipe({\n  name: 'orderPreco'\n})\nexport class OrderPipePreco implements PipeTransform {\n\n  transform(array: any, field: string): any[] {\n    if (!Array.isArray(array)) {\n      return [];\n    }\n    array.sort((a: any, b: any) => {\n      if (a[field] < b[field]) {\n        return -1;\n      } else if (a[field] > b[field]) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    return array;\n\n  }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}